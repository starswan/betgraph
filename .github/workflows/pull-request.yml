name: Ruby

on:
  pull_request:
    branches: [ "main", "postgres" ]

jobs:
  test:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        #        some issue with zipfiles on ruby 3.3
        #        ruby-version: ['3.1', '3.2', '3.3']
        ruby-version: ['3.1', '3.2']

    services:
      postgres:
        # Docker Hub image
        image: timescale/timescaledb-ha:pg14-latest
        env:
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: 123rails!
          POSTGRES_DATABASE: betgraph_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    env:
      RAILS_ENV: test
      RAPID_API_KEY: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up CMake for undercover gem
        uses: lukka/get-cmake@latest

      - name: Update to latest
        run: sudo apt update

      - name: Install libcurl for 'curb' gem
        run: sudo apt install libcurl4-openssl-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Pronto Rubocop
        run: bundle exec pronto run -r rubocop -f github_pr -c origin/${{ github.base_ref }}
        env:
          RUBOCOP_CONFIG: .rubocop.yml
          PRONTO_PULL_REQUEST_ID: ${{ github.event.pull_request.number }}
          PRONTO_GITHUB_ACCESS_TOKEN: "${{ github.token }}"

      - name: Native Rubocop
        run: bundle exec rubocop

      - name: Install Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Yarn install
        run: yarn install

      - name: Setup log directory
        run: mkdir -p log

      - name: Setup test db
        run: bundle exec rake db:create db:schema:load

      # Run ruby tests in headless mode
      - name: Ruby tests
        run: xvfb-run -a bundle exec rake spec

      - name: Pronto Undercover
        run: bundle exec pronto run -r undercover -f github_pr -c origin/${{ github.base_ref }}
        env:
          PRONTO_PULL_REQUEST_ID: ${{ github.event.pull_request.number }}
          PRONTO_GITHUB_ACCESS_TOKEN: "${{ github.token }}"

      - name: Run undercover natively
        run: bundle exec undercover -c origin/${{ github.base_ref }}
